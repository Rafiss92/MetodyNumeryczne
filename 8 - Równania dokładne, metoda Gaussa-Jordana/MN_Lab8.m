clc;clear;% Autor - Rafał Mastalerzfunction [x] = jordan(a,y)% Opcja 4 - Funkcja obliczajaca rozwiazanie ukladu rownan skladajacego sie z n wierszy i n niewiadomych% za posrednictwem metody eliminacji Gaussa-Jordana. Mozna dowolnie modyfikowac wielkosc macierzy poprzez podanie n na poczatku programu.  [m,n]=size(a);   if (m==n) % Sprawdzam czy macierz jest kwadratowa
    detA=det(a);    a=[a y];    [m,n]=size(a);     if((n>0) || (detA!=0))        for k=1:m-1            for v=2:m                if a(k,k)==0 % Sprawdzanie, czy w pozycji a(k,k) nie wystepuje 0. Jesli tak, dokonaj zamian wierszy                    tymczasowa=a(1,:);                    a(1,:)=a(v,:);                    a(v,:)=tymczasowa;                endif            endfor            % Zerowanie dolnej przekątnej            for i=k+1:m                a(i,:)=a(i,:)-a(k,:)*(a(i,k)/a(k,k));            endfor        endfor                disp("Macierz po wyzerowaniu dolnej przekatnej");        a        % Zerowanie gornej przekatnej        for k=m:-1:2            for i=k-1:-1:1                a(i,:)=a(i,:)-a(k,:)*(a(i,k)/a(k,k));            endfor        endfor        disp("Macierz po wyzerowaniu gornej przekatnej");        a        % Petla szukajaca poszczegolnych rozwiazan        disp("Rozwiazania ukladu rownan:");            for r=1:m                a(r,:)=a(r,:)/a(r,r);                x(r,1)=a(r,n);            endfor    else      disp("n<=0, niezgodne z warunkami zadania!");    endif    else      disp("Macierz nie jest kwadratowa!");  endifendfunction% s - rozmiar macierzy generowanych losowos=8;% Generowanie macierzy do obliczenA=floor(rand(s)*10);y=floor(rand(s,1)*10);wynik=jordan(A,y);wynikdisp("Sprawdzenie: ");X=inv(A)*y